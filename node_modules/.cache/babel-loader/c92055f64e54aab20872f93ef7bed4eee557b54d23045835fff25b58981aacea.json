{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danae\\\\OneDrive\\\\Desktop\\\\DV\\\\Rooted\\\\whoah what savw\\\\hit-me-up\\\\src\\\\components\\\\LoginRegisterForms.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./css/LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockDatabase = [{\n  email: \"user1@example.com\",\n  password: \"password123\"\n}, {\n  email: \"user2@example.com\",\n  password: \"securepass456\"\n}, {\n  email: \"user3@example.com\",\n  password: \"mypassword789\"\n}, {\n  email: \"user4@example.com\",\n  password: \"adminpass321\"\n}, {\n  email: \"user5@example.com\",\n  password: \"guestpass654\"\n}];\nfunction LoginRegisterForm({\n  isLogin = true\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [renderError, setRenderError] = useState(false);\n  const [error, setError] = useState(null);\n  const [isError, setIsError] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isLogin) {\n      //Login\n      const match = mockDatabase.find(user => user.email == email && user.password == password);\n      if (match) {\n        setError(\"Login successful!\");\n        setRenderError(true);\n        setIsError(false);\n        console.log(\"Login successful!\");\n      } else {\n        setError(\"Invalid email or password\");\n        setRenderError(true);\n        setIsError(true);\n        console.log(\"Login failed!\");\n      }\n    } else {\n      //Register\n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        setRenderError(true);\n        setIsError(true);\n        return;\n      } else {\n        //Success\n        setError(\"Success!\");\n        setRenderError(true);\n        setIsError(false);\n        //Do logic to store user\n        console.log({\n          email,\n          password\n        });\n      }\n    }\n  };\n  function RenderErrorMessage(isError) {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message success\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  function RenderConfirm() {\n    return /*#__PURE__*/_jsxDEV(FloatingLabel, {\n      controlId: \"floatingConfirmPassword\",\n      label: \"Confirm Password\",\n      className: \"form-field-floating\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"  Confirm Password\",\n        className: \"form-field-control\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  function RenderCombination() {\n    if (isLogin) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"combination-title\",\n        children: \"INPUT COMBINATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"combination-title\",\n        children: \"CREATE COMBINATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingInput\",\n            label: \"Email address\",\n            className: \"form-field-floating\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"form-field-control\",\n              type: \"email\",\n              placeholder: \"name@example.com\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingPassword\",\n            label: \"Password\",\n            className: \"form-field-floating\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              className: \"form-field-control\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), isLogin ? null : RenderConfirm(), RenderCombination(), renderError ? RenderErrorMessage(isError) : null, /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: {\n                span: 6,\n                offset: 3\n              },\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"login-submit\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginRegisterForm, \"3EXK41/b0/FolphsdMj0VnV/z+E=\");\n_c = LoginRegisterForm;\nexport default LoginRegisterForm;\nvar _c;\n$RefreshReg$(_c, \"LoginRegisterForm\");","map":{"version":3,"names":["React","Container","Row","Col","FloatingLabel","Form","useState","Button","jsxDEV","_jsxDEV","mockDatabase","email","password","LoginRegisterForm","isLogin","_s","setEmail","setPassword","confirmPassword","setConfirmPassword","renderError","setRenderError","error","setError","isError","setIsError","handleSubmit","e","preventDefault","match","find","user","console","log","RenderErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","RenderConfirm","controlId","label","Control","type","placeholder","value","onChange","target","required","RenderCombination","onSubmit","md","span","offset","xs","_c","$RefreshReg$"],"sources":["C:/Users/danae/OneDrive/Desktop/DV/Rooted/whoah what savw/hit-me-up/src/components/LoginRegisterForms.js"],"sourcesContent":["//Imports\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./css/LoginForm.css\";\r\n\r\nconst mockDatabase = [\r\n  { email: \"user1@example.com\", password: \"password123\" },\r\n  { email: \"user2@example.com\", password: \"securepass456\" },\r\n  { email: \"user3@example.com\", password: \"mypassword789\" },\r\n  { email: \"user4@example.com\", password: \"adminpass321\" },\r\n  { email: \"user5@example.com\", password: \"guestpass654\" },\r\n];\r\n\r\nfunction LoginRegisterForm({ isLogin = true }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [renderError, setRenderError] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isLogin) {\r\n      //Login\r\n      const match = mockDatabase.find(\r\n        (user) => user.email == email && user.password == password\r\n      );\r\n      if (match) {\r\n        setError(\"Login successful!\");\r\n        setRenderError(true);\r\n        setIsError(false);\r\n        console.log(\"Login successful!\");\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n        setRenderError(true);\r\n        setIsError(true);\r\n        console.log(\"Login failed!\");\r\n      }\r\n    } else {\r\n      //Register\r\n      if (password !== confirmPassword) {\r\n        setError(\"Passwords do not match\");\r\n        setRenderError(true);\r\n        setIsError(true);\r\n        return;\r\n      } else {\r\n        //Success\r\n        setError(\"Success!\");\r\n        setRenderError(true);\r\n        setIsError(false);\r\n        //Do logic to store user\r\n        console.log({ email, password });\r\n      }\r\n    }\r\n  };\r\n  function RenderErrorMessage(isError) {\r\n    if (isError) {\r\n      return <p className=\"error-message error\">{error}</p>;\r\n    } else {\r\n      return <p className=\"error-message success\">{error}</p>;\r\n    }\r\n  }\r\n\r\n  function RenderConfirm() {\r\n    return (\r\n      <FloatingLabel\r\n        controlId=\"floatingConfirmPassword\"\r\n        label=\"Confirm Password\"\r\n        className=\"form-field-floating\"\r\n      >\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"  Confirm Password\"\r\n          className=\"form-field-control\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required={true}\r\n        />\r\n      </FloatingLabel>\r\n    );\r\n  }\r\n  function RenderCombination() {\r\n    if (isLogin) {\r\n      return <h1 className=\"combination-title\">INPUT COMBINATION</h1>;\r\n    } else {\r\n      return <h1 className=\"combination-title\">CREATE COMBINATION</h1>;\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Email address\"\r\n              className=\"form-field-floating\"\r\n            >\r\n              <Form.Control\r\n                className=\"form-field-control\"\r\n                type=\"email\"\r\n                placeholder=\"name@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required={true}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"floatingPassword\"\r\n              label=\"Password\"\r\n              className=\"form-field-floating\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"form-field-control\"\r\n                required={true}\r\n              />\r\n            </FloatingLabel>\r\n            {isLogin ? null : RenderConfirm()}\r\n            {RenderCombination()}\r\n            {/* If login screen, do not show the confirm password field  */}\r\n            {renderError ? RenderErrorMessage(isError) : null}\r\n            <Row>\r\n              <Col md={{span: 6, offset: 3}} xs={12}>\r\n                <Button className=\"login-submit\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n}\r\nexport default LoginRegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}